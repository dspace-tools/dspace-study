version: "3.7"

services:

  traefik:
    image: traefik:1.7.8-alpine # The official Traefik docker image
    ports:
      - 80:80     # The HTTP port
      - 8080:8080 # The Web UI (enabled by --api)
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock #
      - ./traefik/traefik.toml:/traefik.toml
      - ./traefik/acme.json:/acme.json
    command: --api --docker --logLevel=DEBUG
    networks:
      - proxy
    
  dspacedb:
    image: dspace/dspace-postgres-pgcrypto
    # Note that a separate image exists for DSpace 4x
    # image: dspace/dspace-postgres-4x
    container_name: dspacedb6
    environment:
      - PGDATA=/pgdata
    volumes:
      - ./pgdata:/pgdata
      - "./dspace/init-scripts:/dspace-docker-tools"
    networks:
      - dspacenet
    tty: true
    stdin_open: true

  dspace6:
    image: "dspace/dspace:dspace-6_x-jdk8-test"
    container_name: dspace6
    environment:
      - SCRIPTVER=6
      - DSPACE_INSTALL=/dspace
      - ADMIN_EMAIL=test@test.edu
      - ADMIN_PASS=admin
      - ADMIN_FNAME=AdminFirst
      - ADMIN_LNAME=AdminLast
      - AIPZIP=/backups/backups-2019-06-06.zip
      # export SKIPAIP=Y
      - SKIPAIP=N
      # Number of sec to wait before attempting AIP ingest
      - AIPWAIT=0
      # Number of sec to wait before attempting to start tomcat
      - DBWAIT=0
      # Env vars with double underbars in names will be replaced with periods and written to local.cfg
      # The defaul values for local.cfg will be provided here
      # __D__ -> -
      # __P__ -> .
      - dspace__P__dir=/dspace
      - db__P__url=jdbc:postgresql://dspacedb:5432/dspace
      - dspace__P__hostname=medoabsoluto.com.br
      - dspace__P__baseUrl=http://medoabsoluto.com.br
      - dspace__P__name=DSpace Started with Docker Compose
    labels:
      - traefik.backend=dspace
      - "traefik.frontend.rule=Host:www.medoabsoluto.com.br,medoabsoluto.com.br"
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.port=8080

    volumes:
      - "assetstore:/dspace/assetstore"

      - "./dspace/init-scripts:/dspace-docker-tools"
      - "./dspace/config/xmlui.xconf:/dspace/config/xmlui.xconf"
      - "./dspace/management:/dspace/management"
      - "./backups:/backups"
      - "solr_authority:/dspace/solr/authority/data"
      - "solr_oai:/dspace/solr/oai/data"
      - "solr_search:/dspace/solr/search/data"
      - "solr_statistics:/dspace/solr/statistics/data"
    entrypoint: /dspace-docker-tools/ingestAIP.sh
    networks:
      - dspacenet
      - proxy
    depends_on:
      - dspacedb
    tty: true
    stdin_open: true


volumes:
  pgdata:
  assetstore:
  # The Solr volumes will be defined in one of the dX.override.yml files
  solr_authority:
  solr_oai:
  solr_search:
  solr_statistics:

networks:
  dspacenet:
    external: false
  proxy:
    external: true